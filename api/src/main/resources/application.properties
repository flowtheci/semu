chatgpt.api.key=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
chatgpt.api.url=https://api.openai.com/v1/threads
chatgpt.api.old-url=https://api.openai.com/v1
speech.api.url=https://api.tartunlp.ai/text-to-speech/v2
chatgpt.model=gpt-4
chatgpt.assistant.math=asst_2CpzxQbxo3unYQZbIm8ZOrhi
chatgpt.assistant.math.vision=asst_ONGp1qmgJpkvzFPH1Uym5L4o
chatgpt.assistant.title=asst_hO6z0OFjnDU5AcYruktZBE3W
chatgpt.assistant.estonian=asst_BLrTbM86iOebOWRnpHxmL6ZN
jwt.secret=supersecuresemukeysupersecuresemukeysupersecuresemukeysupersecuresemukeysupersecuresemukeysupersecuresemukey
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
spring.cloud.gcp.sql.database-name=data
spring.cloud.gcp.sql.instance-connection-name=tribal-saga-397814:europe-north1:semu-db
# So app starts despite "table already exists" errors.
spring.sql.init.continue-on-error=true
# Enforces database initialization
spring.sql.init.mode=always
spring.datasource.username=root
spring.datasource.password=erik2012!
spring.cloud.gcp.project-id=tribal-saga-397814
spring.cloud.gcp.credentials.location=classpath:gc.json
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Specify your JDBC URL
spring.datasource.url=jdbc:mysql://google/data?cloudSqlInstance=tribal-saga-397814:europe-north1:semu-db&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=erik2012!&useSSL=false&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=utf8mb4
spring.jpa.properties.hibernate.connection.characterEncoding=utf8mb4
spring.jpa.properties.hibernate.connection.CharSet=utf8mb4
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
logging.level.org.springframework.cloud.gcp=DEBUG
logging.level.com.google.cloud.sql=DEBUG
logging.level.org.hibernate.SQL=DEBUG

